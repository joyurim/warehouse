{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, \"123\", -1 /* HOISTED */);\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", {\n    class: _normalizeClass([{\n      'web': $data.isWebLayout\n    }, \"mainContainer\"])\n  }, [..._hoisted_2], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","_createElementBlock","class","_normalizeClass","$data","isWebLayout","_hoisted_2"],"sources":["/Users/10x10/Desktop/yurim/warehouse/src/App.vue"],"sourcesContent":["<template>\n  <main :class=\"{'web': isWebLayout}\" class=\"mainContainer\">\n    <div>123</div>\n  </main>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  components: {\n  },\n  data() {\n    return {\n      isWebLayout: false,\n    };\n  },\n  methods: {\n    checkIfWeb() {\n      this.isWebLayout = window.innerWidth >= 750;\n    }\n  },\n  mounted() {\n    this.checkIfWeb();\n    window.addEventListener('resize', this.checkIfWeb);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.checkIfWeb);\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import 'normalize.css';\n@import '@/styles/common.scss';\n</style>\n"],"mappings":";gCAEIA,mBAAA,CAAc,aAAT,KAAG;oBAARC,UAAc,C;;uBADhBC,mBAAA,CAEO;IAFAC,KAAK,EADdC,eAAA;MAAA,OACwBC,KAAA,CAAAC;IAAW,GAAS,eAAe;KAD3D,IAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}