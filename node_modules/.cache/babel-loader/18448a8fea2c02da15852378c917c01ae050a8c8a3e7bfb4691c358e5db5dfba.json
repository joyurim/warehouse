{"ast":null,"code":"export default {\n  __name: 'ModalPopup',\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    }\n  },\n  emits: ['update:visible'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const close = () => {\n      emit('update:visible', false);\n    };\n    const __returned__ = {\n      props,\n      emit,\n      close\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["props","__props","emit","__emit","close"],"sources":["/Users/10x10/Desktop/yurim/warehouse/src/components/common/ModalPopup.vue"],"sourcesContent":["<script setup>\nimport { defineProps, defineEmits } from 'vue';\nconst props = defineProps({\n  visible: {\n    type: Boolean,\n    required: true\n  }\n});\nconst emit = defineEmits(['update:visible']);\n\nconst close = () => {\n  emit('update:visible', false);\n};\n</script>\n\n<template>\n  <teleport to=\"body\">\n    <div v-if=\"visible\" class=\"modal-overlay\" @click=\"close\">\n      <div class=\"modal-content\" @click.stop>\n        <slot></slot>\n        <button @click=\"close\">Close</button>\n      </div>\n    </div>\n  </teleport>\n</template>\n\n<style scoped lang=\"scss\">\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background: white;\n  padding: 20px;\n  border-radius: 5px;\n  position: relative;\n}\n.modal-enter-from .modal-container,\n.modal-leave-to .modal-container {\n  transform: scale(1.1);\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;IAEA,MAAMA,KAAK,GAAGC,OAKZ;IACF,MAAMC,IAAI,GAAGC,MAA+B;IAE5C,MAAMC,KAAK,GAAGA,CAAA,KAAM;MAClBF,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC;IAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}