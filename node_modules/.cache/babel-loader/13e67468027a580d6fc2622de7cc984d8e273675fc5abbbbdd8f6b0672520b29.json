{"ast":null,"code":"import { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderSlot as _renderSlot, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, Teleport as _Teleport, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/common/icon-close.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-29bf8f26\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"modal__header\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"팝업 닫기\"\n}, null, -1));\nconst _hoisted_3 = [_hoisted_2];\nconst _hoisted_4 = {\n  class: \"modal__body\"\n};\nimport { toRefs } from 'vue';\nexport default {\n  __name: 'BaseModal',\n  props: {\n    modelValue: {\n      type: Boolean,\n      required: true\n    },\n    popupTitle: {\n      type: String,\n      default: ''\n    }\n  },\n  emits: ['update:modelValue'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const props = __props;\n    const emit = __emit;\n    const {\n      modelValue\n    } = toRefs(props);\n    const close = () => {\n      emit('update:modelValue', false);\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createBlock(_Teleport, {\n        to: \"body\"\n      }, [_createVNode(_Transition, {\n        name: \"modal\"\n      }, {\n        default: _withCtx(() => [_unref(modelValue) ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"modal\",\n          onClick: close\n        }, [_createElementVNode(\"div\", {\n          class: \"modal__container\",\n          onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"]))\n        }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString(__props.popupTitle), 1), _createElementVNode(\"button\", {\n          class: \"modal__header--close\",\n          onClick: close\n        }, _hoisted_3)]), _createElementVNode(\"div\", _hoisted_4, [_renderSlot(_ctx.$slots, \"default\")])])])) : _createCommentVNode(\"\", true)]),\n        _: 3\n      })]);\n    };\n  }\n};","map":{"version":3,"names":["toRefs","props","__props","emit","__emit","modelValue","close"],"sources":["/Users/10x10/Desktop/yurim/warehouse/src/components/common/BaseModal.vue"],"sourcesContent":["<template>\n  <teleport to=\"body\">\n    <Transition name=\"modal\">\n      <div v-if=\"modelValue\" class=\"modal\" @click=\"close\">\n        <div class=\"modal__container\" @click.stop>\n          <div class=\"modal__header\">\n            <h1>{{ popupTitle }}</h1>\n            <button class=\"modal__header--close\" @click=\"close\">\n              <img src=\"@/assets/common/icon-close.svg\" alt=\"팝업 닫기\">\n            </button>\n          </div>\n          <div class=\"modal__body\">\n            <slot></slot>\n          </div>\n        </div>\n      </div>\n    </Transition>\n  </teleport>\n</template>\n\n<script setup>\nimport { defineProps, defineEmits, toRefs } from 'vue';\nconst props = defineProps({\n  modelValue: {\n    type: Boolean,\n    required: true\n  },\n  popupTitle: {\n    type: String,\n    default: ''\n  }\n});\nconst emit = defineEmits(['update:modelValue']);\n\nconst { modelValue } = toRefs(props);\nconst close = () => {\n  emit('update:modelValue', false);\n};\n</script>\n\n<style scoped lang=\"scss\">\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  &__container {\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    width: 100vw;\n    height: 100svh;\n    background: white;\n  }\n  &__header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: pxToVw(6) pxToVw(16) pxToVw(8);\n    border: pxToVw(1) solid $grey30;\n    h1 {\n      font-weight: 700;\n      font-size: pxToVw(18);\n      line-height: pxToVw(26);\n    }\n    &--close {\n      width: pxToVw(20);\n      height: pxToVw(20);\n    }\n  }\n  &__body {\n    flex: 1;\n    overflow-y: auto;\n  }\n}\n.modal-enter-from .modal-container,\n.modal-leave-to .modal-container {\n  transform: scale(1.1);\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;AAqBA,SAAmCA,MAAM,QAAQ,KAAK;;;;;;;;;;;;;;;;;IACtD,MAAMC,KAAK,GAAGC,OASZ;IACF,MAAMC,IAAI,GAAGC,MAAkC;IAE/C,MAAM;MAAEC;IAAW,CAAC,GAAGL,MAAM,CAACC,KAAK,CAAC;IACpC,MAAMK,KAAK,GAAGA,CAAA,KAAM;MAClBH,IAAI,CAAC,mBAAmB,EAAE,KAAK,CAAC;IAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}